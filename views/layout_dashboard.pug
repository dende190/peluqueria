doctype html
html(lang='en')
    head
        meta(charset='utf-8')
        link(rel='icon', type='image/png', href='/static/img/favicon.ico')
        meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')
        title Light Bootstrap Dashboard by Creative Tim
        meta(content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0', name='viewport')
        meta(name='viewport', content='width=device-width')
        block styles
            // Bootstrap.css
            link(rel='stylesheet', href='/static/css/bootstrap.min.css')
            // Animation library for notifications
            link(href='/static/css/animate.min.css', rel='stylesheet')
            // Select2
            link(rel="stylesheet", href="/static/css/select2.min.css")
            // Light Bootstrap Table core CSS
            link(href='/static/css/light-bootstrap-dashboard.css?v=1.4.0', rel='stylesheet')
            // Date pixker
            link(rel='stylesheet', href='/static/css/bootstrap-datepicker.min.css')
            // Fonts and icons
            link(href='http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css', rel='stylesheet')
            link(href='http://fonts.googleapis.com/css?family=Roboto:400,700,300', rel='stylesheet', type='text/css')
            link(href='/static/css/pe-icon-7-stroke.css', rel='stylesheet')
            link(href='/static/css/shop.css', rel='stylesheet')
            // Data Table CSS
            link(href='/static/js/DataTable/datatables.min.css', rel='stylesheet')

    body
        .wrapper
            // Sidebar
            .sidebar(data-color='purple')
                .sidebar-wrapper
                    .logo
                        a.simple-text(href='/dashboard') Peluqueria
                    ul.nav
                        li.nav-item
                            a.nav-link(href='/dashboard')
                                i.fa.fa-home
                                p Home
                        li.nav-item
                            a.nav-link(href='/reservas')
                                i.fa.fa-calendar
                                p Reservas
                        li.nav-item
                            a.nav-link(data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne")
                                i.fa.fa-money
                                p Contabilidad
                            #collapseOne.collapse
                                p.nav-item-collapse 
                                    a(href="/facturas")
                                        | Cobros
                                p.nav-item-collapse 
                                    a(href="/contar-caja")
                                        | Contar Caja
                                p.nav-item-collapse 
                                    a(href="#")
                                        | Gastos
                        li.nav-item
                            a.nav-link(href='/clientes')
                                i.fa.fa-user
                                p Clientes
                        li.nav-item
                            a.nav-link(href='/empleados')
                                i.fa.fa-users
                                p Empleados
                        li.nav-item
                            a.nav-link(href='/lista-servicios')
                                i.fa.fa-scissors
                                p Servicios
                        li.nav-item
                            a.nav-link(href='/productos')
                                i.fa.fa-shopping-cart
                                p Productos
                        li.btn-log-out.nav-item
                            a.nav-link(href='/logout')
                                i.fa.fa-sign-out
                                p Cerrar Sesion
            // End Sidebar
            .main-panel
                // Navbar
                nav.navbar.navbar-light.bg-light.navbar-fixed.navbar-expand-md
                    button.navbar-toggler(type='button', data-toggle='collapse')
                        span.sr-only Toggle navigation
                        span
                            i.fa.fa-bars.fa-2x
                    .collapse.navbar-collapse
                        ul.nav.navbar-nav
                            li.nav-item
                                a.btn.btn-primary(data-toggle="collapse" aria-expanded="true" aria-controls="collapsePaymentForm"  data-target="#collapsePaymentForm")
                                    i.fa.fa-usd
                                    span Cobrar
                // End Navbar
                //Payment Form
                #collapsePaymentForm.collapse
                    .card.card-body
                        .loader-container
                            .loader
                                div.lds-ripple
                                    div
                                    div
                                    div
                                p.loader-title 
                                    | Registrando Cobro
                        form#paymentForm()
                            .payment-container
                                .col-md-6
                                    .card.card-body
                                        .form-group
                                            label(for="FormControlSelectEmployee") Cajero
                                            select#FormControlSelectEmployee.form-control.select-payment(name="user" required)
                                        .form-group
                                            label(for="FormControlSelectClient") Cliente
                                            select#FormControlSelectClient.form-control.select-payment(name="client" required)
                                        .form-group
                                            label(for="FormControlSelectServices") Servicios
                                            select#FormControlSelectServices.form-control
                                            input#inputServices(type="hidden" name="services" value="")
                                            #list-services.items-container
                                        .form-group
                                            label(for="FormControlSelectProducts") Productos
                                            select#FormControlSelectProducts.form-control
                                            input#inputProducts(type="hidden" name="products" value="")
                                            #list-products.items-container
                                        .form-group
                                            .form-check.form-check-inline
                                                input#radio-cash.form-check-input(type="radio" name="method_pay" value="cash" required)
                                                label.form-check-label(for="radio-cash") Efectivo
                                            .form-check.form-check-inline
                                                input#radio-creditCard.form-check-input(type="radio" name="method_pay" value="credit" required)
                                                label.form-check-label(for="radio-creditCard") Targeta de Credito
                                .col-md-6
                                    .card.card-body
                                        .d-flex.align-items-center
                                            p.payment-title
                                                | Subtotal: $
                                            input#inputSubtotalPrice.input-payment-form.input-read-only(name="subtotal_price" value="0" readonly)
                                        .d-flex.align-items-center
                                            p.payment-title
                                                | Impuestos: $
                                            input#inputTaxes.input-payment-form.input-read-only(name="total_taxes" value="0" readonly)
                                        .d-flex.align-items-center
                                            p.payment-title
                                                | Total A Pagar: $
                                            input#inputTotalPrice.input-payment-form.input-read-only(name="total_price" value="0" readonly)
                                        #changeSection
                                            .d-flex.align-items-center
                                                p.m-0
                                                    | El cliente paga con: 
                                                input#inputClientCash(type="number" name="client_money")
                                            .d-flex.align-items-center
                                                p.payment-title
                                                    | Cambio : $
                                                .d-flex.align-items-center
                                                    input#inputChange.input-payment-form.input-read-only(name="total_change" value="0" readonly)
                                        button.btn.btn-primary(type="submit") Cobrar
                                p#error-payment.text-danger.d-none
                                    | Error al registrar la factura
                //End Payment Form
                .content
                    // Main Content
                    block content
                    // Footer
                    footer.footer
                        .container-fluid
                            nav.float-left
                                ul
                                    li
                                        a(href='#') Home
                            p.copyright.float-right Â© Hecho por
                    // Footer End
        block scripts
            // Core JS Files
            script(src="/static/js/jquery-3.2.1.min.js" type="text/javascript")
            script(src="/static/js/bootstrap.min.js")
            script(src="/static/js/popper.min.js")
            //Select2
            script(src="/static/js/select2.min.js")
            // Light Bootstrap Table Core javascript and methods for Demo purpose
            script(src="/static/js/light-bootstrap-dashboard.js?v=1.4.0")
            // Data Table javascript
            script(src="/static/js/DataTable/datatables.min.js")
            script(src="/static/js/others/datatable.js")
            // Date Picker
            script(src="/static/js/bootstrap-datepicker.min.js")
            script(src="/static/js/others/configDatePicker.js")
            //Moment JS
            script(src="/static/js/moment.min.js")
            script(src="/static/js/moment-es.js")
            script.
                moment.locale('es')
                let spanishDataTable = {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "NingÃºn dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Ãltimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            script.
                async function sendBill(bill) {
                    const options = {
                        method: 'POST',
                        body: JSON.stringify(bill),
                        headers: { "Content-Type": "application/json" }
                    }
                    let response = await fetch('/pago', options)
                    if(response.ok) {
                        $('#error-payment').addClass('d-none')
                        setTimeout(()=>{
                            $(".loader-container").css({ opacity: 0, 'z-index': -1 })
                            setTimeout(()=>{
                                $("#collapsePaymentForm").collapse("toggle")
                                setTimeout(()=>{
                                    cleanUpForm()
                                },500)
                            },500)
                        },1500)
                    } else {
                        $(".loader-container").css({ opacity: 0, 'z-index': -1 })
                        $('#error-payment').removeClass('d-none')
                        console.log("Error al registrar el pago")
                    }
                }
                function cleanUpForm() {
                    $("#FormControlSelectEmployee").select2("val", ' ');
                    $("#FormControlSelectClient").select2("val", ' ');
                    $("#inputServices").val('');
                    $("#inputProducts").val('');
                    $("#list-services").empty();
                    $("#list-products").empty();
                    $("input[name=method_pay]").prop('checked', false)
                    $("#inputSubtotalPrice").val('0');
                    $("#inputTaxes").val('0');
                    $("#inputTotalPrice").val('0');
                    $("#inputClientCash").val('');
                    $("#inputChange").val('0');
                }
                function getDataForm() {
                    const user = $("select[name=user]").val()
                    const client = $("select[name=client]").val()
                    const services = $("input[name=services]").val()
                    const products = $("input[name=products]").val()
                    const method_pay = $("input[name=method_pay]:checked").val()
                    const subtotal_price = $("input[name=subtotal_price]").val()
                    const total_taxes = $("input[name=total_taxes]").val()
                    const total_price = $("input[name=total_price]").val()
                    const client_money = $("input[name=client_money]").val()
                    const total_change = $("input[name=total_change]").val()
                    const bill = { user, client, services, products, method_pay, subtotal_price, total_taxes, total_price }
                    if (method_pay == "cash") {
                        bill.client_money = $("input[name=client_money]").val()
                        bill.total_change = $("input[name=total_change]").val()
                    }
                    return bill
                }
                function risePrice(e) {
                    let currentPrice = $('#inputSubtotalPrice').val()
                    let currentIVA = $('#inputTaxes').val()
                    let { price } = e.params.data
                    let { iva } = e.params.data

                    let total = parseInt(currentPrice) + parseInt(price)
                    let totalIva = parseFloat(currentIVA)  + parseFloat(iva)

                    $('#inputSubtotalPrice').val(total)
                    $('#inputTaxes').val(totalIva)
                }
                function lowerPrice(unselectedPrice, unselectedIVA) {
                    let currentPrice = $('#inputSubtotalPrice').val()
                    let currentIVA = $('#inputTaxes').val()

                    let total = parseInt(currentPrice) - parseInt(unselectedPrice)
                    let iva = parseFloat(currentIVA) - parseFloat(unselectedIVA)
                    
                    $('#inputSubtotalPrice').val(total)
                    $('#inputTaxes').val(iva)
                }
                function updateTotalPrice() {
                    let currentPrice = $('#inputSubtotalPrice').val()
                    let currentIVA = $('#inputTaxes').val()
                    let total = parseFloat(currentPrice) + parseFloat(currentIVA)
                    $('#inputTotalPrice').val(total)
                }
                function updateClientChange() {
                    let totalPrice = parseFloat($('#inputTotalPrice').val())
                    let clientCash = parseFloat($('#inputClientCash').val())
                    let change = 0
                    if(clientCash >= totalPrice && totalPrice != 0) {
                        change = clientCash - totalPrice
                    } else {
                        change = 0.0
                    }
                    let $inputChange = $('#inputChange')
                    $inputChange.val(change)
                }
                $(document).ready(function() {
                    $('#FormControlSelectServices').select2({
                        placeholder: 'Escoge uno...',
                        width: '100%',
                        minimumResultsForSearch: -1,
                        ajax: {
                            url: '/select-servicios',
                            dataType: 'json',
                        },
                    });
                    $('#FormControlSelectProducts').select2({
                        placeholder: 'Escoge uno...',
                        width: '100%',
                        minimumResultsForSearch: -1,
                        ajax: {
                            url: '/select-productos',
                            dataType: 'json',
                        }
                    });
                    $('#FormControlSelectClient').select2({
                        placeholder: 'Escoge uno...',
                        width: '100%',
                        ajax: {
                            url: '/select-clientes',
                            dataType: 'json',
                        }
                    });
                    $('#FormControlSelectEmployee').select2({
                        placeholder: 'Escoge uno...',
                        width: '100%',
                        ajax: {
                            url: '/select-empleados',
                            dataType: 'json',
                        }
                    });
                    $('#FormControlSelectServices').on('select2:select', (e) =>  {
                        risePrice(e)
                        let serviceTemplate = `<div class="item-selected service animated fadeInRight">
                                                    <span class="fa fa-times-circle-o delete-icon text-danger" data-price='${e.params.data.price}' data-iva='${e.params.data.iva}' data-service='${e.params.data.id}'></span>
                                                    <p class="item-name">${e.params.data.text}</p>
                                                    <hr/>
                                                    <p class="item-price">$${ parseInt(e.params.data.price).toLocaleString() }</p>
                                                </div>`
                        //- console.log(serviceTemplate)
                        let services = $('#inputServices').val()
                        if(services) {
                            services = services.split(',')
                            services.push(e.params.data.id)
                        } else {
                            services = e.params.data.id
                        }
                        $('#inputServices').val(services)
                        $('#list-services').append(serviceTemplate)
                        $("#FormControlSelectServices").val(null).trigger("change");
                        updateTotalPrice()
                        updateClientChange()
                    })
                    $('body').on('click', '.delete-icon', function () {
                        let removePrice = $(this).attr('data-price')
                        let removeIVA = $(this).attr('data-iva')
                        let serviceId = $(this).attr('data-service')
                        let productId = $(this).attr('data-product')
                        //- console.log(serviceId)
                        //- console.log(productId)
                        lowerPrice(removePrice,removeIVA)
                        if(serviceId) {
                            let services = $('#inputServices').val().split(',')
                            for (var i=services.length-1; i>=0; i--) {
                                if (services[i] == serviceId) {
                                    services.splice(i, 1);
                                    break;
                                }
                            }
                            $('#inputServices').val(services)
                        } else {
                            let products = $('#inputProducts').val().split(',')
                            for (var i=products.length-1; i>=0; i--) {
                                if (products[i] == productId) {
                                    products.splice(i, 1);
                                    break;
                                }
                            }
                            $('#inputProducts').val(products)
                        }
                        $(this).parent().hide()
                        updateTotalPrice()
                        updateClientChange()
                    });
                    $('#FormControlSelectProducts').on('select2:select', (e) =>  {
                        risePrice(e)
                        let productTemplate = `<div class="item-selected product animated fadeInRight">
                                                    <span class="fa fa-times-circle-o delete-icon text-danger" data-product='${e.params.data.id}' data-price='${e.params.data.price}' data-iva='${e.params.data.iva}'></span>
                                                    <p class="item-name">${e.params.data.text}</p>
                                                    <hr/>
                                                    <p class="item-price">$${ parseInt(e.params.data.price).toLocaleString() }</p>
                                                </div>`
                        //- console.log(serviceTemplate)
                        let products = $('#inputProducts').val()
                        if(products) {
                            products = products.split(',')
                            products.push(e.params.data.id)
                        } else {
                            products = e.params.data.id
                        }
                        $('#inputProducts').val(products)
                        $('#list-products').append(productTemplate)
                        $("#FormControlSelectProducts").val(null).trigger("change");
                        updateTotalPrice()
                        updateClientChange()
                    })
                    $('#radio-creditCard').on('change', function() {
                        if(this.checked) {
                            console.log('camv')
                            $('#changeSection').hide()
                        }
                    })
                    $('#radio-cash').on('change', function() {
                        if(this.checked) {
                            $('#changeSection').show()
                        }
                    })
                    $('#inputClientCash').keyup( (e) => {
                        updateClientChange()
                    })
                    $('#paymentForm').submit( function(e){
                        $(".loader-container").css({opacity: 1, 'z-index': 10})
                        e.preventDefault();
                        const bill = getDataForm()
                        sendBill(bill)
                    })
                });