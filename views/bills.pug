extends layout_dashboard
append styles
    link(rel="stylesheet", href="/static/css/daterangepicker.min.css")
    link(rel="stylesheet", href="/static/css/list-bills.css")
block content
    .container
        .row
            .col-lg-5
                .card
                    .card-header
                        p Escoge una fecha
                    .card-body
                        .container-date
                            #reportrange.report-picker
                                i.fa.fa-calendar-o
                                | &nbsp;
                                span
                                i.fa.fa-caret-down
            .col-lg-7.list-balance
                h1 Balance General
                .d-flex
                    .item-balance.d-flex.flex-column.justify-content-between
                        p#count-balance
                        span.bg-dark
                            |  COBROS
                    .item-balance.d-flex.flex-column.justify-content-between
                        p#subtotal-balance
                        span.bg-warning
                            | IMPORTE
                    .item-balance.d-flex.flex-column.justify-content-between
                        p#taxes-balance
                        span.bg-danger
                            | IMPUESTOS
                    .item-balance.d-flex.flex-column.justify-content-between
                        p#total-balance
                        span.bg-success
                            |  TOTAL
        .container-list-bill
            .card
                .card-body
                    table#table-bills.table.table-hover.animated.fadeIn
                        thead
                            td 
                                strong Fecha de Cobro
                            td 
                                strong Cliente
                            td 
                                strong Cobrador
                            td 
                                strong Forma de Pago
                            td 
                                strong Total
append scripts 
    script(src="/static/js/daterangepicker.min.js")
    script.
        async function requestData(url, start, end) {
            const options = {
                method: 'POST',
                body: JSON.stringify({ start, end }),
                headers: { "Content-Type": "application/json" }
            }
            const response = await fetch(url, options)
            if(response.ok) {
                const data = await response.json()
                return data
            } else {
                return undefined
            }
        }
        function createBalance(data) {
            if(typeof data !== 'undefined' && data.length > 0) {
                let balance  = data[0]
                $('#count-balance').hide().html(balance.number_bills.toLocaleString()).fadeIn()
                $('#subtotal-balance').hide().html('$' + balance.subtotal_price.toLocaleString()).fadeIn()
                $('#taxes-balance').hide().html('$' + balance.total_taxes.toLocaleString()).fadeIn()
                $('#total-balance').hide().html(balance.total_price.toLocaleString()).fadeIn()
            } else {
                $('#count-balance').hide().html('0').fadeIn()
                $('#subtotal-balance').hide().html('$0').fadeIn()
                $('#taxes-balance').hide().html('$0').fadeIn()
                $('#total-balance').hide().html('$0').fadeIn()
            }
        }
        function createTable(data) {
            if ($.fn.dataTable.isDataTable('#table-bills')) {
                $('#table-bills').DataTable().destroy();
            }
            let billsTable = $('#table-bills').dataTable({
                "data": data,
                "columns": [
                    {
                        "data": "date",
                        "render": function(data, type, row) {
                            return moment(data).format("LLL")
                        }
                    },
                    {
                        "data": "common_client",
                        "render": function(data,type,row) {
                            return `${data[0].first_name} ${data[0].last_name}`
                        }
                    },
                    {
                        "data": "common_user",
                        "render": function(data,type,row) {
                            return `${data[0].first_name} ${data[0].last_name}`
                        }
                    },
                    {
                        "data": "method_pay",
                        "render": function(data, type, row){
                            if(data == 'cash') {
                                return `Efectivo`
                            } else {
                                return `Targeta de Credito`
                            }
                        }
                    },
                    {
                        "data": "total_price",
                        "render": (data, type, row) => `<a href="/cobro/${row._id}">$${parseFloat(data).toLocaleString()}</a>`
                    },
                ],
                "language": spanishDataTable,
                "order": [[ 0, "desc" ]]
            })
        }
        async function createReport(start, end) {
            const dataReport = await requestData('/bills', start, end)
            createTable(dataReport)
            const dataBalance = await requestData('/balance', start, end)
            createBalance(dataBalance)
        }
        function createPickerRange(start, end) {
            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                maxDate: end,
                ranges: {
                    'Hoy': [moment(), moment()],
                    'Ayer': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Ultimos 7 Dias': [moment().subtract(6, 'days'), moment()],
                    'Ultimos 30 Dias': [moment().subtract(29, 'days'), moment()],
                    'Este Mes': [moment().startOf('month'), moment().endOf('month')],
                    'Mes Pasado': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                opens: 'right'
            }, selectedPickerRange);
        }
        function selectedPickerRange(start, end) {
            $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            start = start.startOf('day').format("YYYY-MM-DD HH:mm");
            end = end.endOf('day').format("YYYY-MM-DD HH:mm");
            createReport(start, end)
        }
        $(document).ready(function(){
            let startToday = moment();
            let endToday = moment();
            createPickerRange(startToday, endToday)
            selectedPickerRange(startToday,endToday)
        })

